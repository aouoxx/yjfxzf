/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.supconit.kqfx.web.fxzf.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class redis_ConfigInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"redis_ConfigInfo\",\"namespace\":\"com.supconit.kqfx.web.fxzf.avro\",\"fields\":[{\"name\":\"DOWN_FLOW\",\"type\":\"string\"},{\"name\":\"sSystemtime\",\"type\":\"string\"},{\"name\":\"parameter2\",\"type\":\"string\"},{\"name\":\"parameter3\",\"type\":\"string\"},{\"name\":\"parameter4\",\"type\":\"string\"},{\"name\":\"parameter5\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence DOWN_FLOW;
  @Deprecated public CharSequence sSystemtime;
  @Deprecated public CharSequence parameter2;
  @Deprecated public CharSequence parameter3;
  @Deprecated public CharSequence parameter4;
  @Deprecated public CharSequence parameter5;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public redis_ConfigInfo() {}

  /**
   * All-args constructor.
   */
  public redis_ConfigInfo(CharSequence DOWN_FLOW, CharSequence sSystemtime, CharSequence parameter2, CharSequence parameter3, CharSequence parameter4, CharSequence parameter5) {
    this.DOWN_FLOW = DOWN_FLOW;
    this.sSystemtime = sSystemtime;
    this.parameter2 = parameter2;
    this.parameter3 = parameter3;
    this.parameter4 = parameter4;
    this.parameter5 = parameter5;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return DOWN_FLOW;
    case 1: return sSystemtime;
    case 2: return parameter2;
    case 3: return parameter3;
    case 4: return parameter4;
    case 5: return parameter5;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: DOWN_FLOW = (CharSequence)value$; break;
    case 1: sSystemtime = (CharSequence)value$; break;
    case 2: parameter2 = (CharSequence)value$; break;
    case 3: parameter3 = (CharSequence)value$; break;
    case 4: parameter4 = (CharSequence)value$; break;
    case 5: parameter5 = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'DOWN_FLOW' field.
   */
  public CharSequence getDOWNFLOW() {
    return DOWN_FLOW;
  }

  /**
   * Sets the value of the 'DOWN_FLOW' field.
   * @param value the value to set.
   */
  public void setDOWNFLOW(CharSequence value) {
    this.DOWN_FLOW = value;
  }

  /**
   * Gets the value of the 'sSystemtime' field.
   */
  public CharSequence getSSystemtime() {
    return sSystemtime;
  }

  /**
   * Sets the value of the 'sSystemtime' field.
   * @param value the value to set.
   */
  public void setSSystemtime(CharSequence value) {
    this.sSystemtime = value;
  }

  /**
   * Gets the value of the 'parameter2' field.
   */
  public CharSequence getParameter2() {
    return parameter2;
  }

  /**
   * Sets the value of the 'parameter2' field.
   * @param value the value to set.
   */
  public void setParameter2(CharSequence value) {
    this.parameter2 = value;
  }

  /**
   * Gets the value of the 'parameter3' field.
   */
  public CharSequence getParameter3() {
    return parameter3;
  }

  /**
   * Sets the value of the 'parameter3' field.
   * @param value the value to set.
   */
  public void setParameter3(CharSequence value) {
    this.parameter3 = value;
  }

  /**
   * Gets the value of the 'parameter4' field.
   */
  public CharSequence getParameter4() {
    return parameter4;
  }

  /**
   * Sets the value of the 'parameter4' field.
   * @param value the value to set.
   */
  public void setParameter4(CharSequence value) {
    this.parameter4 = value;
  }

  /**
   * Gets the value of the 'parameter5' field.
   */
  public CharSequence getParameter5() {
    return parameter5;
  }

  /**
   * Sets the value of the 'parameter5' field.
   * @param value the value to set.
   */
  public void setParameter5(CharSequence value) {
    this.parameter5 = value;
  }

  /** Creates a new redis_ConfigInfo RecordBuilder */
  public static Builder newBuilder() {
    return new Builder();
  }
  
  /** Creates a new redis_ConfigInfo RecordBuilder by copying an existing Builder */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }
  
  /** Creates a new redis_ConfigInfo RecordBuilder by copying an existing redis_ConfigInfo instance */
  public static Builder newBuilder(redis_ConfigInfo other) {
    return new Builder(other);
  }
  
  /**
   * RecordBuilder for redis_ConfigInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<redis_ConfigInfo>
    implements org.apache.avro.data.RecordBuilder<redis_ConfigInfo> {

    private CharSequence DOWN_FLOW;
    private CharSequence sSystemtime;
    private CharSequence parameter2;
    private CharSequence parameter3;
    private CharSequence parameter4;
    private CharSequence parameter5;

    /** Creates a new Builder */
    private Builder() {
      super(redis_ConfigInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.DOWN_FLOW)) {
        this.DOWN_FLOW = data().deepCopy(fields()[0].schema(), other.DOWN_FLOW);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sSystemtime)) {
        this.sSystemtime = data().deepCopy(fields()[1].schema(), other.sSystemtime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.parameter2)) {
        this.parameter2 = data().deepCopy(fields()[2].schema(), other.parameter2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.parameter3)) {
        this.parameter3 = data().deepCopy(fields()[3].schema(), other.parameter3);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.parameter4)) {
        this.parameter4 = data().deepCopy(fields()[4].schema(), other.parameter4);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.parameter5)) {
        this.parameter5 = data().deepCopy(fields()[5].schema(), other.parameter5);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing redis_ConfigInfo instance */
    private Builder(redis_ConfigInfo other) {
            super(redis_ConfigInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.DOWN_FLOW)) {
        this.DOWN_FLOW = data().deepCopy(fields()[0].schema(), other.DOWN_FLOW);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sSystemtime)) {
        this.sSystemtime = data().deepCopy(fields()[1].schema(), other.sSystemtime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.parameter2)) {
        this.parameter2 = data().deepCopy(fields()[2].schema(), other.parameter2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.parameter3)) {
        this.parameter3 = data().deepCopy(fields()[3].schema(), other.parameter3);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.parameter4)) {
        this.parameter4 = data().deepCopy(fields()[4].schema(), other.parameter4);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.parameter5)) {
        this.parameter5 = data().deepCopy(fields()[5].schema(), other.parameter5);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'DOWN_FLOW' field */
    public CharSequence getDOWNFLOW() {
      return DOWN_FLOW;
    }
    
    /** Sets the value of the 'DOWN_FLOW' field */
    public Builder setDOWNFLOW(CharSequence value) {
      validate(fields()[0], value);
      this.DOWN_FLOW = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'DOWN_FLOW' field has been set */
    public boolean hasDOWNFLOW() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'DOWN_FLOW' field */
    public Builder clearDOWNFLOW() {
      DOWN_FLOW = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'sSystemtime' field */
    public CharSequence getSSystemtime() {
      return sSystemtime;
    }
    
    /** Sets the value of the 'sSystemtime' field */
    public Builder setSSystemtime(CharSequence value) {
      validate(fields()[1], value);
      this.sSystemtime = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'sSystemtime' field has been set */
    public boolean hasSSystemtime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'sSystemtime' field */
    public Builder clearSSystemtime() {
      sSystemtime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'parameter2' field */
    public CharSequence getParameter2() {
      return parameter2;
    }
    
    /** Sets the value of the 'parameter2' field */
    public Builder setParameter2(CharSequence value) {
      validate(fields()[2], value);
      this.parameter2 = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'parameter2' field has been set */
    public boolean hasParameter2() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'parameter2' field */
    public Builder clearParameter2() {
      parameter2 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'parameter3' field */
    public CharSequence getParameter3() {
      return parameter3;
    }
    
    /** Sets the value of the 'parameter3' field */
    public Builder setParameter3(CharSequence value) {
      validate(fields()[3], value);
      this.parameter3 = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'parameter3' field has been set */
    public boolean hasParameter3() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'parameter3' field */
    public Builder clearParameter3() {
      parameter3 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'parameter4' field */
    public CharSequence getParameter4() {
      return parameter4;
    }
    
    /** Sets the value of the 'parameter4' field */
    public Builder setParameter4(CharSequence value) {
      validate(fields()[4], value);
      this.parameter4 = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'parameter4' field has been set */
    public boolean hasParameter4() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'parameter4' field */
    public Builder clearParameter4() {
      parameter4 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'parameter5' field */
    public CharSequence getParameter5() {
      return parameter5;
    }
    
    /** Sets the value of the 'parameter5' field */
    public Builder setParameter5(CharSequence value) {
      validate(fields()[5], value);
      this.parameter5 = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'parameter5' field has been set */
    public boolean hasParameter5() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'parameter5' field */
    public Builder clearParameter5() {
      parameter5 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public redis_ConfigInfo build() {
      try {
        redis_ConfigInfo record = new redis_ConfigInfo();
        record.DOWN_FLOW = fieldSetFlags()[0] ? this.DOWN_FLOW : (CharSequence) defaultValue(fields()[0]);
        record.sSystemtime = fieldSetFlags()[1] ? this.sSystemtime : (CharSequence) defaultValue(fields()[1]);
        record.parameter2 = fieldSetFlags()[2] ? this.parameter2 : (CharSequence) defaultValue(fields()[2]);
        record.parameter3 = fieldSetFlags()[3] ? this.parameter3 : (CharSequence) defaultValue(fields()[3]);
        record.parameter4 = fieldSetFlags()[4] ? this.parameter4 : (CharSequence) defaultValue(fields()[4]);
        record.parameter5 = fieldSetFlags()[5] ? this.parameter5 : (CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
