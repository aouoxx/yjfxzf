#parse("platform/_header.vm")
<link href="$!{rc.contextPath}/assets/css/analysis.css" rel="stylesheet">
</head>
<body>
<div class="ui-layout-north">
    #bread_crumbs2("ANALYSIS_OVERLOADPUNISH")
</div>
<div class="ui-layout-center" id="container">
    <div class="ui-layout-center">
        <div class="ui-mid-chart-left">
            <div class="ui-chart-title">
                <form id="search_form">
                    <input type="hidden" name="jgid" id="jgidc" value="$!{jgid}"/>
                    <input type="hidden" name="condition.jgid" id="jgid" value="$!{jgid}"/>
                    <input type="hidden" name="condition.detectStation" id="selectedStation"/>
                    <table style="margin-top: 12px;">
                        <tr>
                            <td class="ui-search-name" style="color: #055a7e;font-size: 16px;">统计时间：</td>
                            <td class="ui-search-c"><input type="text" name="condition.beginDate" id="datePicker1"></td>
                            <td style="text-align: right;padding-right: 10px;">&nbsp;&nbsp;至&nbsp;&nbsp;</td>
                            <td><input type="text" name="condition.endDate" id="datePicker2"></td>
                            <td>
                                <button type="submit" class="hc_btn k-primary" style="background-color:#37ADDA;border-color:#37ADDA;" id="search"><i class="fa fa-search"></i>查 询</button>
                            </td>
                        </tr>
                    </table>
                </form>
            </div>
            <div class="ui-chart-content">
                <div class="ui-chart-tab menu">
                    <ul class="tab-menu">
                        <li class="list-bz"><a href="javascript:void(0);" onclick="refreshData('0','');" class="list-words">饼状图</a>
                            <ul class="list-menu" id="detectionStation"></ul>
                        </li>
                        <li class="list-zz"><a href="javascript::void(0);" onclick="refreshData('1','');" class="list-words">柱状图</a></li>
                    </ul>
                </div>
                <div class="ui-charts">
                    <div id="overLoadBar"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="ui-layout-east">
        <div class="ui-mid-chart-right">
            <div class="ui-chart-title">
                <span class="out-data" id="exportExcel">导出数据</span>
            </div>
        </div>
        <div class="ui-chart-content" id="grid-content">
            <div id="grid"></div>
        </div>
    </div>
</div>
<script src="$!{rc.contextPath}/assets/js/echarts/echarts-plain.js" type="text/javascript"></script>
<script src="$!{rc.contextPath}/assets/js/echarts/overload.js" type="text/javascript"></script>
    #parse("platform/_footer.vm")
<script>
    $(document).ready(function () {
        var start = $("#datePicker1").hcDatePicker({
            culture: "zh-CN",
            format: "yyyy-MM-dd",
            change: startChange
        }).data("kendoDatePicker");
        var end = $("#datePicker2").hcDatePicker({
            culture: "zh-CN",
            format: "yyyy-MM-dd",
            change: endChange
        }).data("kendoDatePicker");

        function startChange() {
            var startDate = start.value(), endDate = end.value();
            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                end.min(startDate);
            } else if (endDate) {
                start.max(new Date(endDate));
            } else {
                endDate = new Date();
                start.max(endDate);
            }
        }
        function endChange() {
            var endDate = end.value(), startDate = start.value();
            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                start.max(endDate);
            } else if (startDate) {
                end.min(new Date(startDate));
            } else {
                endDate = new Date();
                start.max(endDate);
            }
        }
        startChange();
        endChange();
    });
    $(function () {
        detectionSeclect();
        var _w = window.screen.width * 0.45;
        var _center_main_layout = $("body").layout({
            defaults: {
                spacing_open: 0,
                spacing_closed: 0
            },
            north: {
                size: 34,
                closable: true
            },
            onresize_end: function () {

            }
        });
        var _chartPart_layout = $("#container").layout({
            defaults: {
                spacing_open: 0,
                spacing_closed: 0
            },
            east: {
                size: _w,
                closable: true
            },
            onresize_end: function () {
                $("#overLoadBar").height(_chartPart_layout.center.state.innerHeight * 0.7);
                $("#grid-content").height(_chartPart_layout.east.state.innerHeight - 40);
                var grid = $("#grid").data("kendoGrid");
                grid.resize();
            }
        });

        $("#overLoadBar").height(_chartPart_layout.center.state.innerHeight * 0.7);
        $("#grid-content").height(_chartPart_layout.east.state.innerHeight - 40);

        var flag = ($('#jgidc').val());
        if (flag != 133 || flag != 134) {
            $('#jgid').val('');
        }

        ##渲染列表
        myquick_datagrid("#grid", "#search_form", "$!{rc.contextPath}/analysis/overload/overloadPunish/list", [
                {
                    field: "id",
                    hidden: true
                }, {
                    field: "tjDateStr",
                    title: "统计时间",
                    width: "24%"
                }, {
                    field: "overLoadNormal",
                    title: "正常",
                    width: "15%"
                }, {
                    field: "overLoadQingWei",
                    title: "轻微"
                }, {
                    field: "overLoadYiBan",
                    title: "一般"
                }, {
                    field: "overLoadJiaoZhong",
                    title: "较重"
                }, {
                    field: "overLoadYanzhong",
                    title: "严重"
                }, {
                    field: "overLoadTebieYanZhong",
                    title: "特别<br/>严重"
                }],
            {
                sortable: false,
                pageable: true,
                pageSize: 20,
                dataBound: function (e) {
                    grid_dataBound(e);
                }
            },
            {
                serverSorting: true
            },
            []);
        $("#grid .k-grid-toolbar").remove();
        ## 渲染饼图数据(初始化加载饼图)
        getPicData();
    });

    ## 表格回调方法
    function grid_dataBound(e) {
        var flag = ($('#jgid').val());
        var data = e.sender._data;
        sender = e.sender;
    }

    ##  获取治超站信息列表
    function detectionSeclect() {
        $.ajax({
            url: "$!{rc.contextPath}/analysis/overload/overloadPunish/detectionStation",
            dataType: "json",
            type: "post",
            data: {},
            success: function (data, textStatus) {
                var html = '<li><a href="javascript:void(0);" onclick="refreshData(' + '0' + ',' + '\'\'' + ')" >汇总</a></li>';
                for (var i = 0; i < data.data.length; i++) {
                    var detectStations = data.data[i].split(":");
                    var name = detectStations[1];
                    ## name=name.substring(3,name.length);
                    var onclick = 'refreshData(' + '0' + ',' + detectStations[0] + ');';
                    var li = '<li><a href="javascript:void(0);" ' + 'onclick=\"' + onclick + '\" >' + name + '</a></li>'
                    html = html + li;
                }
                $("#detectionStation").html(html);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
            }
        });
    }
    ## 饼图或柱状图的标志
    var mark = 0;
    ##  刷新图标和表格
    function refreshData(flag, station) {
        if (flag == 0) {
            $('#selectedStation').val(station);
            mark = 0;
            ##选择画出饼图
            getPicData();
            edited_callback();
        } else if (flag == 1) {
            ##选择画出折线图
            $('#selectedStation').val('');
            getBarData();
            mark = 1;
            edited_callback();
        }
    }
    ##  表单验证提交查询
    $('form').validator({
        rules: {},
        messages: {},
        fields: {},
        valid: function (form) {
            var station = $("#selectedStation").val();
            var begin = '';
            var end = '';
            if ($("#datePicker2").data("kendoDatePicker").value() != null) {
                end = $("#datePicker2").data("kendoDatePicker").value().format('yyyy-MM-dd');
            }
            if ($("#datePicker1").data("kendoDatePicker").value() != null) {
                begin = $("#datePicker1").data("kendoDatePicker").value().format('yyyy-MM-dd');
            }
            ##刷新图标和表格
            refreshData(mark, station);
        }
    });
    ## 表格刷新函数
    function edited_callback() {
        var grid = $("#grid").data("kendoGrid");
        grid.dataSource.read();
    }
    ##获取饼图数据
    function getPicData() {
        $.ajax({
            url: "$!{rc.contextPath}/analysis/overload/overloadPunish/getChartData",
            dataType: "json",
            type: "post",
            data: $("form").serialize(),
            success: function (data) {
                if (data.data.success == 200) {
                    $('#overLoadBar').show();
                    ##生成饼图legend
                    var legend = [];
                    legend = data.data.legend;
                    ##生成饼图的数据
                    var overload = [];
                    var overload0 = 0, overload1 = 0, overload2 = 0, overload3 = 0, overload4 = 0, overload5 = 0;
                    $.each(data.data.yAis, function (i, yAis) {
                        overload0 = overload0 + yAis.overLoadNormal;
                        overload1 = overload1 + yAis.overLoadQingWei;
                        overload2 = overload2 + yAis.overLoadYiBan;
                        overload3 = overload3 + yAis.overLoadJiaoZhong;
                        overload4 = overload4 + yAis.overLoadYanzhong;
                        overload5 = overload5 + yAis.overLoadTebieYanZhong;

                    });
                    overload.push(overload0, overload1, overload2, overload3, overload4, overload5);
                    var data = [];
                    $.each(legend, function (i) {
                        if (overload[i] == 0) {
                        ##如果该小时内没有数据在饼图上不显示比例
                            data.push(overload[i]);
                        } else {
                            data.push({name: legend[i], value: overload[i]});
                        }
                    });
                    ##渲染饼图
                    pieChart({
                        "title": "按违法程度统计",
                        "elementId": "overLoadBar",
                        "legendData": legend,
                        "legendx": "5%",
                        "legendy": "5%",
                        "seriesName": "违法程度统计数据",
                        "seriesData": data
                    });
                } else {
                    $('#overLoadBar').hide();
                }
            }
        });
    }

    ## 获取柱状图数据
    function getBarData() {
        $.ajax({
            url: "$!{rc.contextPath}/analysis/overload/overloadPunish/getChartData",
            dataType: "json",
            type: "post",
            data: $("form").serialize(),
            success: function (data) {
                if (data.data.success == 200) {
                    $('#overLoadBar').show();
                    var xData = [];
                    ##柱状图xAis
                    xData = data.data.xAis;
                    ##柱状图的legend
                    var legend = [];
                    legend = data.data.legend;
                    ##柱状图的yAis
                    ##这里可以进行优化,现在的做法是手动的将治超站的数据和y轴的数据进行对应,这样要求
                    ##对应关系不能出错,否则会出现数据混乱
                    var yData = [];
                    var yAisData = [];
                    var arr1 = [];
                    var arr2 = [];
                    var arr3 = [];
                    var arr4 = [];
                    var arr5 = [];
                    var arr6 = [];
                    $.each(data.data.yAis, function (i, yAis) {
                        arr1.push(yAis.overLoadNormal);
                        arr2.push(yAis.overLoadQingWei);
                        arr3.push(yAis.overLoadYiBan);
                        arr4.push(yAis.overLoadJiaoZhong);
                        arr5.push(yAis.overLoadYanzhong);
                        arr6.push(yAis.overLoadTebieYanZhong);
                    });
                    ##通过权限控制图标legend的显示
                    var flag = ($('#jgid').val());
                    var reallegend = [];
                    reallegend = legend;
                    yData.push({name: legend[0], type: 'bar', data: arr1}, {
                                name: legend[1],
                                type: 'bar',
                                data: arr2
                            },
                            {name: legend[2], type: 'bar', data: arr3}, {
                                name: legend[3],
                                type: 'bar',
                                data: arr4
                            },
                            {name: legend[4], type: 'bar', data: arr5}, {
                                name: legend[5],
                                type: 'bar',
                                data: arr6
                            });
                    ##默认选中的元素
                    var selected = legend[0];
                    ##渲染图标
                    var position = $("#overLoadBar").height() - 73;
                    areaBarChart({
                        "title": "违法程度超限统计",
                        "elementId": "overLoadBar",
                        "legendData": reallegend,
                        "xData": xData,
                        "seriesData": yData,
                        "position": position,
                        "selected": selected

                    });
                } else {
                    $('#zczBar').hide();
                }
            }
        });
    }

    ## 导出excel
    $('#exportExcel').click(function () {
        var detectStation = $('#selectedStation').val();
        if (typeof(detectionStation) == 'undefined') {
            detectStation = '';
        }
        var begin = '';
        var end = '';
        var jgid = ($('#jgidc').val());
        if (jgid != 133 || jgid != 134) {
            jgid = '';
        }
        if ($("#datePicker2").data("kendoDatePicker").value() != null) {
            end = $("#datePicker2").data("kendoDatePicker").value().format('yyyy-MM-dd');
        }
        if ($("#datePicker1").data("kendoDatePicker").value() != null) {
            begin = $("#datePicker1").data("kendoDatePicker").value().format('yyyy-MM-dd');
        }
        window.location.href = "$!{rc.contextPath}/analysis/overload/overloadPunish/exportAll?condition.beginDate=" + begin + "&condition.endDate=" + end + "&condition.detectStation=" + detectStation + "&condition.jgid=" + jgid;
    })
</script>
</body>
</html>